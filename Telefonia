public class Telefonia {
    private PrePago[] prePagos;
    private int numPrePagos;
    private PosPago[] posPagos;
    private int numPosPagos;

    public Telefonia(int maxPrePagos, int maxPosPagos) {
        this.prePagos = new PrePago[maxPrePagos];
        this.posPagos = new PosPago[maxPosPagos];
        this.numPrePagos = 0;
        this.numPosPagos = 0;
    }
    
    // Cadastro de assinantes 
    
     public void cadastrarAssinante() {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Digite o tipo do assinante (1 - Pre-pago / 2 - Pos-pago): ");
        int tipo = scanner.nextInt();

        if (tipo == 1) {
            if (numPrePagos < prePagos.length) {
                System.out.print("Digite o CPF do assinante: ");
                long Cpf = scanner.nextLong();
                scanner.nextLine(); //limpar o buffer

                System.out.print("Digite o nome do assinante: ");
                String Nome = scanner.nextLine();

                System.out.print("Digite o nmero do telefone do assinante: ");
                int Numero = scanner.nextInt();
                
                PrePago novoPrePago = new PrePago(Cpf, Nome, Numero);
                prePagos[numPrePagos] = novoPrePago;
                numPrePagos++;

                System.out.println("Assinante pre-pago cadastrado com sucesso!");
            } else {
                System.out.println("Não há mais espaço para cadastrar novos assinantes pré-pagos.");
            }
        } else if (tipo == 2) {
            if (numPosPagos < posPagos.length) {
                System.out.print("Digite o CPF do assinante: ");
                long Cpf = scanner.nextLong();
                scanner.nextLine(); //limpar o buffer

                System.out.print("Digite o nome do assinante: ");
                String Nome = scanner.nextLine();

                System.out.print("Digite o nmero do telefone do assinante: ");
                int Numero = scanner.nextInt();

                System.out.print("Digite o valor da fatura do assinante: ");
                float Valor = scanner.nextFloat();

                PosPago novoPosPago = new PosPago(Valor, Cpf, Nome, Numero);
                posPagos[numPosPagos] = novoPosPago;
                numPosPagos++;

                System.out.println("Assinante pos-pago cadastrado com sucesso!");
            } else {
                System.out.println("Não há mais espaço para cadastrar novos assinantes pos-pagos.");
            }
          } else {
            System.out.println("Tipo de assinante inválido.");
        }
    }

    //Listagem de assinantes

    public void listarAssinantes() {
        System.out.println("Assinantes pré-pagos:");

        for (int i = 0; i < numPrePagos; i++) {
            System.out.println(prePagos[i].getCpf() + " - " + prePagos[i].nome
            + " - " + prePagos[i].numero);
        }

        System.out.println("\nAssinantes pos-pagos:");

        for (int i = 0; i < numPosPagos; i++) {
            System.out.println(posPagos[i].getCpf() + " - " + posPagos[i].nome
            + " - " + posPagos[i].numero);
        }
    }
    
    public void fazerChamada()
    {
    	Scanner scanner = new Scanner(System.in);
        System.out.println("\n-- Fazer Chamada --");

        System.out.print("Digite o CPF do assinante: ");
        long cpf = scanner.nextLong();

        System.out.print("Digite o tipo de assinante (1 - Pré-pago, 2 - Pós-pago): ");
        int tipoAssinante = scanner.nextInt();

        System.out.print("Digite a duracao da chamada: ");
        int duracao = scanner.nextInt();
        scanner.nextLine(); //limpar buffer
        
        System.out.print("Digite a data (dd/MM/yyyy): ");
        String dataString = scanner.nextLine();
        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        Date data = null;
        try {
            data = format.parse(dataString);
        } catch (ParseException e) {
            System.out.println("Data inválida. Certifique-se de usar o formato dd/MM/yyyy.");
            return;
        }

        if (tipoAssinante == 1) {
        	if(numPrePagos == 0) {
        		System.out.print("lista de assinates Pre-Pagos vazia");
        	}
        	
        	for(int i = 0; i < numPrePagos; i++)
        	{
        		if(prePagos[i].getCpf() == cpf)
        		{
        			prePagos[i].fazerChamada(data, duracao);
        		}
        		else
        		{
        			System.out.print("cpf invalido");
        		}
        	}
        }
        else if(tipoAssinante == 2){
        	if(numPosPagos == 0) {
        		System.out.print("lista de assinates Pos-Pagos vazia");
        	}
            for(int i = 0; i < numPosPagos; i++)
            {
                if(posPagos[i].getCpf() == cpf)
                {
                    posPagos[i].fazerChamada(data, duracao);
                }
                else
                {
                    System.out.print("cpf invalido");
                }
            }
        }
        else{
            System.out.println("Tipo de assinante invlido.");
        }
    }
    
    public void fazerRecarga()
    {
    	Scanner scanner = new Scanner(System.in);
        System.out.print("Digite o CPF do assinante: ");
        long cpf = scanner.nextLong();

        System.out.print("Digite o valor da recarga: ");
        int valorRecarga = scanner.nextInt();
        scanner.nextLine(); //limpar buffer
        
        System.out.print("Digite a data (dd/MM/yyyy): ");
        String dataString = scanner.nextLine();
        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        Date data = null;
        try {
            data = format.parse(dataString);
        } catch (ParseException e) {
            System.out.println("Data inválida. Certifique-se de usar o formato dd/MM/yyyy.");
            return;
        }
        
    	if(numPrePagos == 0) {
    		System.out.print("lista de assinates Pre-Pagos vazia");
    	}

            for(int i = 0; i < numPrePagos; i++)
            {
                if(prePagos[i].getCpf() == cpf)
                {
                    prePagos[i].recarregar(data, valorRecarga);
                }
                else
                {
                    System.out.print("cpf invalido");
                }
            }
    }
    
    public void imprimirFaturas(){
    	
    	Scanner scanner = new Scanner(System.in);
        System.out.print("Digite o mês (ex: 1): ");
        int mes = scanner.nextInt();
        
        if(numPrePagos == 0) {
        	System.out.print("sem fatura de assinates Pre-Pagos");
        }
        else {
        	for(int i = 0; i < numPrePagos; i++){
        		prePagos[i].imprimirFatura(mes);
        	}
        }
}
